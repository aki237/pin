package main

import (
	"fmt"
	"io/ioutil"
	"net"

	"pinlib"
)

// Session struct is used to hold the session values like the local tunneling address
// and other information about the session. This also contains information about the
// server to dial or the address to listen at.
type Session struct {
	*Config
	DefaultGateway   net.IP      // initial default gateway
	ResolvedRemote   net.IP      // remote IP Address resolved to IPv4 address
	InterfaceAddress *net.IPNet  // to be setup during in the hook function
	InterfaceGateway string      // to be setup during in the hook function
	peer             pinlib.Peer // to be setup before the connection initialization
	ocresolv         string      // Original content of resolv.conf before SetupDNS call
}

// SetupDNS is used to setup DNS configuration by editing the resolv.conf
func (s *Session) SetupDNS() error {
	if len(s.DNS) == 0 {
		return nil
	}
	c, err := ioutil.ReadFile("/etc/resolv.conf")
	if err != nil {
		return err
	}
	s.ocresolv = string(c)

	content := "# Generated by pin\n"
	for i := range s.DNS {
		content += fmt.Sprintf("nameserver %s\n", s.DNS[i])
	}

	return ioutil.WriteFile("/etc/resolv.conf", []byte(content), 0644)
}

// RevertDNS is used to revert the DNS configuration by putting back the original content back to the
// /etc/resolv.conf file
func (s *Session) RevertDNS() error {
	if len(s.DNS) == 0 {
		return nil
	}
	return ioutil.WriteFile("/etc/resolv.conf", []byte(s.ocresolv), 0644)
}
